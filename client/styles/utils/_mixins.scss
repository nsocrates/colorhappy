// ## For Susy
@mixin sContainer() {
  @include container();
  width: 100%;
  padding-left: map-get($spacing, half);
  padding-right: map-get($spacing, half);
}

// ## Container
@mixin container() {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: map-get($container, max);
  padding-left: map-get($spacing, half);
  padding-right: map-get($spacing, half);
}

@mixin read-container() {
  @include media(">=large") {
    margin-left: auto;
    margin-right: auto;
    width: map-get($container, read);
  }
}

//## Link
@mixin global-link() {
  // border-bottom: 1px dotted $base-color;
  // padding-bottom: 1px;

  &:hover {
    color: $accent2-color;
    border-color: $accent2-color;
  }
}

//## Clearfix
@mixin clearfix() {
  &::before,
  &::after {
    content: "";
    display: table;
  }

  &::after {
    clear: both;
  }
}

//## Dividers
@mixin separator($color: $black, $op: 0.05) {
  box-shadow: inset 0 1px 0 0 rgba($color, $op),
              inset 0 2px 1px -1px rgba($color, $op / 2);
}

@mixin nav-divider($direction, $op: 0.12) {
  @if $direction == "top" {
    box-shadow: inset 0 1px 0 0 rgba($white, $op),
                inset 0 1px 1px -1px rgba($white, $op / 2);
  } @else {
    box-shadow: inset 0 -1px 0 0 rgba($white, $op),
                inset 0 -1px 1px -1px rgba($white, $op / 2);
  }
}

//## Buttons
@mixin btn() {
  border-radius: em(3px);
  padding: em(8px) em(24px);
  text-align: center;
}

@mixin btn-cta() {
  @include btn;
  font-size: $lead-font-size;
  transition: map-get($transition, cta);
  transition-property: background-color, box-shadow;
}

@mixin btn-bg($bg, $txt: $white, $perc: 6%) {
  background-color: $bg;
  box-shadow: 0 0 0 1px $bg;
  color: $txt;

  &:hover {
    background-color: darken($bg, $perc);
    box-shadow: 0 0 0 1px darken($bg, $perc);
  }

  &:active {
    background-color: darken($bg, $perc * 2);
    box-shadow: 0 0 0 1px darken($bg, $perc * 2);
  }
}

// Media Query
@mixin media($bp) {
  @media (min-width: $bp) {
    @content;
  }
}

// Transition
@mixin ease($property, $duration, $ease) {
  @if ($ease == "ease-in") {
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
  } @else {
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);
  }
}
